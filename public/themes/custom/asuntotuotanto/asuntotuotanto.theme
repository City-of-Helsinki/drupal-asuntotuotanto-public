<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

/**
 * Helper function to get the icons path.
 *
 * @return string|null
 *   Returns path for the icons SVG or null.
 */
function asuntotuotanto_get_icons_path() {
  static $icon_path;
  if (!isset($icon_path)) {
    $theme_handler = \Drupal::service('theme_handler');
    $icon_path = '/' . $theme_handler->getTheme('asuntotuotanto')->getPath() . '/dist/icons/sprite.svg';

    // Add icons path as a global variable.
    if (!empty($icon_path)) {
      return $icon_path;
    }
  }
  return $icon_path;
}

/**
 * Implements hook_preprocess().
 */
function asuntotuotanto_preprocess(&$variables) {
  $variables['asuntotuotanto_icons_path'] = asuntotuotanto_get_icons_path();
  $variables['#attached']['drupalSettings']['asuntotuotanto_icons_path'] = $variables['asuntotuotanto_icons_path'];
}

/**
 * Implements hook_theme_suggestions_alter().
 *
 * {@inheritdoc}
 */
function asuntotuotanto_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'form' & !empty($variables['element']['#id'])) {
    $suggestions[] = 'form__' . str_replace('-', '_', $variables['element']['#id']);
  }
}

/**
 * Implements hook_preprocess_external_entity().
 */
function asuntotuotanto_preprocess_external_entity(&$variables) {
  $entity = $variables['entity'];
  $entity_type = $entity['#entity_type'];

  switch ($entity_type) {
    case 'project':
    case 'apartment':
      if ($services = $entity['field_services']) {
        $services = $services['#items']->getValue();
        $services_stack = [];

        foreach ($services as $key => $service) {
          $service_name = $service['value']['name'];
          $service_distance = $service['value']['distance'];

          $services_stack[] = [
            'name' => $service_name,
            'distance' => $service_distance,
          ];
        }

        $variables['services'] = $services_stack ?? NULL;
      }
      break;
  }
}
