<?php

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

use Drupal\Core\Url;

/**
 * Helper function to get the icons path.
 *
 * @return string|null
 *   Returns path for the icons SVG or null.
 */
function asuntotuotanto_get_icons_path() {
  static $icon_path;
  if (!isset($icon_path)) {
    $theme_handler = \Drupal::service('theme_handler');
    $icon_path = '/' . $theme_handler->getTheme('asuntotuotanto')->getPath() . '/dist/icons/sprite.svg';

    // Add icons path as a global variable.
    if (!empty($icon_path)) {
      return $icon_path;
    }
  }
  return $icon_path;
}

/**
 * Implements hook_preprocess().
 */
function asuntotuotanto_preprocess(&$variables) {
  $variables['asuntotuotanto_icons_path'] = asuntotuotanto_get_icons_path();
  $variables['#attached']['drupalSettings']['asuntotuotanto_icons_path'] = $variables['asuntotuotanto_icons_path'];
}

/**
 * Implements hook_theme_suggestions_alter().
 *
 * {@inheritdoc}
 */
function asuntotuotanto_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'form' & !empty($variables['element']['#id'])) {
    $suggestions[] = 'form__' . str_replace('-', '_', $variables['element']['#id']);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function asuntotuotanto_preprocess_menu(&$variables) {
  $menu_name = $variables['menu_name'];

  switch ($menu_name) {
    case 'main':
      $items = $variables['items'];
      $menu_block_configuration_suggestion = $variables['menu_block_configuration']['suggestion'];

      if ($menu_block_configuration_suggestion === 'main__mobile') {
        $login_link = [
          'title' => t('Log in'),
          'url' => Url::fromRoute('user.login'),
          'is_login_link' => TRUE,
        ];

        // Check if user is logged in.
        if (!\Drupal::currentUser()->isAuthenticated()) {
          $variables['items'][count($items)] = $login_link;
        }
      }
      break;
  }
}
